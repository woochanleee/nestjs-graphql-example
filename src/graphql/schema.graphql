type Query {
  getPost(id: Int!): GetPostOutput!
  getPosts(authorId: String): GetPostsOutput!
  hello(name: String!): String!
  helloWorld: String!
  me: UserProfileOutput!
  userProfile(email: String!): UserProfileOutput!
}

type Mutation {
  createPost(input: CreatePostInput!): CreatePostOutput!
  createUser(input: CreateUserInput!): CreateUserOutput!
  deletePost(id: Int!): DeletePostOutput!
  editPost(input: EditPostInput!): EditPostOutput!
  editProfile(input: EditProfileInput!): EditProfileOutput!
  login(input: LoginInput!): LoginOutput!
  refreshToken: RefreshTokenOutput!
}

"""
User role
"""
enum Role {
  ADMIN
  USER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  email: String!
  id: String!
  name: String
  posts: [Post!]!
  registeredAt: DateTime!
  role: Role!
  updatedAt: DateTime!
}

type Post {
  author: User!
  authorId: String!
  content: String!
  createdAt: DateTime!
  id: Int!
  title: String!
  updatedAt: DateTime!
}

type GetPostOutput {
  ok: Boolean!
  error: String
  post: Post
}

type GetPostsOutput {
  ok: Boolean!
  error: String
  posts: [Post]
}

type UserProfileOutput {
  ok: Boolean!
  error: String
  user: User
}

input CreatePostInput {
  title: String!
  content: String!
}

type CreatePostOutput {
  ok: Boolean!
  error: String
}

input CreateUserInput {
  email: String!
  password: String!
  name: String
}

type CreateUserOutput {
  ok: Boolean!
  error: String
}

type DeletePostOutput {
  ok: Boolean!
  error: String
}

input EditPostInput {
  postId: Int!
  title: String
  content: String
}

type EditPostOutput {
  ok: Boolean!
  error: String
}

input EditProfileInput {
  name: String
  password: String
}

type EditProfileOutput {
  ok: Boolean!
  error: String
}

input LoginInput {
  email: String!
  password: String!
}

type LoginOutput {
  ok: Boolean!
  error: String
  accessToken: String
  refreshToken: String
}

type RefreshTokenOutput {
  ok: Boolean!
  error: String
  accessToken: String
  refreshToken: String
}
